{"version":3,"sources":["./src/app/template/sidebar/sidebar.component.ts","./src/app/template/sidebar/sidebar.component.html","./src/app/servico-prestado.service.ts","./src/app/clientes/clientes.module.ts","./src/app/servico-prestado/servico-prestado-form/servico-prestado-form.component.ts","./src/app/servico-prestado/servico-prestado-form/servico-prestado-form.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/clientes/clientes-routing.module.ts","./src/environments/environment.ts","./src/app/clientes/cliente.ts","./src/app/clientes/clientes-lista/clientes-lista.component.html","./src/app/clientes/clientes-lista/clientes-lista.component.ts","./src/app/servico-prestado/servico-prestado-lista/servico-prestado-lista.component.html","./src/app/servico-prestado/servico-prestado-lista/servico-prestado-lista.component.ts","./src/app/clientes/clientes-form/clientes-form.component.ts","./src/app/clientes/clientes-form/clientes-form.component.html","./src/app/clientes.service.ts","./src/app/servico-prestado/servico-prestado.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/template/navbar/navbar.component.ts","./src/app/template/navbar/navbar.component.html","./src/app/servico-prestado/servico-prestado.ts","./src/app/app.module.ts","./src/app/servico-prestado/servico-prestado-routing.module.ts","./src/app/template/template.module.ts","./src/app/layout/layout.component.ts","./src/app/layout/layout.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"layoutSidenav_nav\">\r\n    <nav class=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\r\n       <div class=\"sb-sidenav-menu\">\r\n          <div class=\"nav\">\r\n             <div class=\"sb-sidenav-menu-heading\">Sistema</div>\r\n             <a class=\"nav-link\" routerLink=\"/home\">\r\n                <div class=\"sb-nav-link-icon\"><i class=\"fas fa-tachometer-alt\"></i></div>\r\n                Home\r\n             </a>\r\n             <div class=\"sb-sidenav-menu-heading\">Cadastro</div>\r\n             <a class=\"nav-link collapsed\" routerLink=\"/clientes\" data-toggle=\"collapse\"\r\n                data-target=\"#collapseLayouts\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                <div class=\"sb-nav-link-icon\"><i class=\"fas fa-columns\"></i></div>\r\n                Clientes\r\n             </a>\r\n             <a class=\"nav-link collapsed\" routerLink=\"/servico-prestado\" data-toggle=\"collapse\"\r\n             data-target=\"#collapseLayouts\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n             <div class=\"sb-nav-link-icon\"><i class=\"fas fa-address-card\"></i></div>\r\n             Serviços prestados\r\n          </a>\r\n          </div>\r\n       </div>\r\n       <div class=\"sb-sidenav-footer\">\r\n          <div class=\"small\">Logged in as:</div>\r\n          Start Bootstrap\r\n       </div>\r\n    </nav>\r\n </div>","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ServicoPrestado } from './servico-prestado/servico-prestado';\r\nimport { servicoPrestadoBusca } from './servico-prestado/servico-prestado-lista/servicoPrestadoBusca';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServicoPrestadoService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  apiUrl: string = environment.apiUrlBase + 'api/servicos-prestados';\r\n\r\n  salvar(servicoPrestado: ServicoPrestado) : Observable<ServicoPrestado>{\r\n    return this.http.post<ServicoPrestado>(this.apiUrl, servicoPrestado);\r\n  }\r\n\r\n  buscar(nome:string,mes:number):Observable<servicoPrestadoBusca[]>{\r\n\r\n    const httpParams = new HttpParams().set(\"nome\",nome).set(\"mes\",mes ? mes.toString(): '');\r\n    const url = this.apiUrl + \"?\" + httpParams.toString();\r\n    console.log(url);\r\n    return this.http.get<any>(url);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ClientesRoutingModule } from './clientes-routing.module';\r\nimport { ClientesFormComponent } from './clientes-form/clientes-form.component';\r\nimport { FormsModule }   from '@angular/forms';\r\nimport { ClientesListaComponent } from './clientes-lista/clientes-lista.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ClientesFormComponent,\r\n    ClientesListaComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ClientesRoutingModule,\r\n    FormsModule\r\n  ],\r\n  exports:[\r\n    ClientesFormComponent,\r\n    ClientesListaComponent\r\n  ]\r\n})\r\nexport class ClientesModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ClientesService } from 'src/app/clientes.service';\r\nimport { Cliente } from 'src/app/clientes/cliente';\r\nimport { ServicoPrestadoService } from 'src/app/servico-prestado.service';\r\nimport { ServicoPrestado } from '../servico-prestado';\r\n\r\n@Component({\r\n  selector: 'app-servico-prestado-form',\r\n  templateUrl: './servico-prestado-form.component.html',\r\n  styleUrls: ['./servico-prestado-form.component.css']\r\n})\r\nexport class ServicoPrestadoFormComponent implements OnInit {\r\n\r\n  clientes: Cliente[] = [];\r\n  servico: ServicoPrestado;\r\n  success: boolean = false;\r\n  errors: String[];\r\n\r\n  constructor(private clienteService: ClientesService, private service: ServicoPrestadoService) {\r\n    this.servico = new ServicoPrestado();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.clienteService.getClientes().subscribe(response => this.clientes = response);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.service.salvar(this.servico).subscribe(response => {\r\n      this.success = true;\r\n          this.errors = null;\r\n          this.servico = new ServicoPrestado();\r\n        }, errorResponse => {\r\n          this.success = false;\r\n          this.errors = errorResponse.error.erros;\r\n    })\r\n  }\r\n\r\n}\r\n","<h1 class=\"mt-4\">Serviços Prestados</h1>\r\n<ol class=\"breadcrumb mb-4\">\r\n    <li class=\"breadcrumb-bitem active\">Novo</li>\r\n</ol>\r\n<div class=\"container\">\r\n    <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"success == true\">\r\n                    Serviço Prestado salvo/Atualizado com sucesso!\r\n                </div>\r\n                <div class=\"alert alert-danger\" role=\"alert\" *ngFor=\"let erro of errors\">\r\n                    {{ erro }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <label>Clientes:</label>\r\n                    <select class=\"form-control\" [ngModelOptions]=\"{standalone:true}\" [(ngModel)]=\"servico.idCliente\">\r\n                        <option value=\"\">Selecione</option>\r\n                        <option *ngFor=\"let cliente of clientes\" [ngValue]=\"cliente.id\">\r\n                            {{cliente.nome}}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <label>Descrição:</label>\r\n                    <input class=\"form-control\" [(ngModel)]=\"servico.descricao\" type=\"text\" name=\"descricao\"\r\n                        id=\"inputDescricao\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <label>Preço:</label>\r\n                    <input class=\"form-control\" [(ngModel)]=\"servico.preco\" type=\"text\" name=\"preco\" id=\"inputPreco\">\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <label>Data:</label>\r\n                    <input class=\"form-control\" [(ngModel)]=\"servico.data\" type=\"text\" name=\"data\" id=\"inputData\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n\r\n                <button type=\"submit\" class=\"btn btn-success\">\r\n                    <i class=\"fa fa-save\"></i> Salvar\r\n                </button>\r\n\r\n                <button type=\"button\" class=\"btn btn-danger ml-1\" routerLink=\"/servico-prestado/lista\">\r\n                    <i class=\"fa fa-arrow-alt-circle-left\"></i> Voltar\r\n                 </button>\r\n\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n<br />","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1 class=\"mt-4\">Home</h1>\r\n<ol class=\"breadcrumb mb-4\">\r\n    <li class=\"breadcrumb-item active\">Bem vindo</li>\r\n</ol>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LayoutComponent } from '../layout/layout.component';\r\nimport { ClientesFormComponent } from './clientes-form/clientes-form.component';\r\nimport { ClientesListaComponent } from './clientes-lista/clientes-lista.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'clientes', component: LayoutComponent, children: [\r\n      { path: 'form', component: ClientesFormComponent },\r\n      { path: 'form/:id', component: ClientesFormComponent },\r\n      { path: 'lista', component: ClientesListaComponent },\r\n      { path: '', redirectTo: '/clientes/lista', pathMatch: 'full' }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ClientesRoutingModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrlBase: 'http://localhost:8080/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export class Cliente{\r\n id:number;\r\n nome:string;\r\n cpf:string;\r\n dataGravacao:string;\r\n\r\n}","<h1 class=\"mt-4\">Clientes</h1>\r\n<ol class=\"breadcrumb mb-4\">\r\n    <li class=\"breadcrumb-item active\">Consulta</li>\r\n</ol>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"mensagemSucesso\">\r\n                {{mensagemSucesso}}\r\n            </div>\r\n            <div class=\"alert alert-danger\" role=\"alert\" *ngFor=\"let mensagemErro of mensagemErro\">\r\n                {{ mensagemErro }}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2\">\r\n            <button class=\"btn btn-warning\" (click)=\"novoCadastro()\">\r\n                <i class=\"fa fa-plus\"></i>Novo\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <table class=\"table table-condensed table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <td>ID</td>\r\n                        <td>CPF</td>\r\n                        <td>Nome</td>\r\n                        <td>Data de cadastro</td>\r\n                        <td></td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let cliente of clientes\">\r\n                        <td>{{ cliente.id }}</td>\r\n                        <td>{{ cliente.cpf }}</td>\r\n                        <td>{{ cliente.nome }}</td>\r\n                        <td>{{ cliente.dataGravacao }}</td>\r\n                        <td>\r\n\r\n                            <button class=\"btn btn-primary\" routerLink=\"/clientes/form/{{cliente.id}}\">\r\n                                <i class=\"fa fa-pen-square\"></i>\r\n                            </button>\r\n\r\n                            <button type=\"button\" class=\"btn btn-danger\" data-toggle=\"modal\" data-target=\"#modalDelecao\"\r\n                                (click)=\"preparaDelecao(cliente)\">\r\n                                <i class=\"fa fa-trash\"></i>\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal\" id=\"modalDelecao\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h4 class=\"modal-title\">Confirmar</h4>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                </div>\r\n                <div class=\"modal-body\" *ngIf=\"clienteSelecionado\">\r\n                    Confirma a deleção do(a) cliente: {{clienteSelecionado.nome}} ?\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\"\r\n                        (click)=\"deletarCliente()\">Confirma</button>\r\n                    <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancelar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ClientesService } from 'src/app/clientes.service';\r\nimport { Cliente } from '../cliente';\r\n\r\n@Component({\r\n  selector: 'app-clientes-lista',\r\n  templateUrl: './clientes-lista.component.html',\r\n  styleUrls: ['./clientes-lista.component.css']\r\n})\r\nexport class ClientesListaComponent implements OnInit {\r\n\r\n  clientes: Cliente[] = [];\r\n  clienteSelecionado: Cliente;\r\n  mensagemErro: string;\r\n  mensagemSucesso: string;\r\n\r\n  constructor(private service: ClientesService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.service.getClientes().subscribe(resposta => this.clientes = resposta);\r\n  }\r\n\r\n  novoCadastro() {\r\n    this.router.navigate(['/clientes/form']);\r\n  }\r\n\r\n  preparaDelecao(cliente: Cliente) {\r\n    this.clienteSelecionado = cliente;\r\n  }\r\n\r\n  deletarCliente() {\r\n    console.log(this.clienteSelecionado)\r\n    this.service.deletar(this.clienteSelecionado).subscribe(\r\n      response => {\r\n        this.mensagemSucesso = 'Cliente deletado com sucesso',\r\n        this.ngOnInit();\r\n      },\r\n      erro => this.mensagemErro = 'Ocorreu um erro ao deletar o cliente');\r\n  }\r\n\r\n}\r\n","<h1 class=\"mt-4\">Serviços Prestados</h1>\r\n<ol class=\"breadcrumb mb-4\">\r\n   <li class=\"breadcrumb-bitem active\">Consulta</li>\r\n</ol>\r\n<div class=\"container\">\r\n   <form #ConsultarForm=\"ngForm\" (submit)=\"consultar()\">\r\n   <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n         <label for=\"inputName\">Nome cliente: </label>\r\n         <input type=\"text\" name=\"nome\" id=\"inputNome\" [(ngModel)]=\"nome\" class=\"form-control\">\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n         <label for=\"inputName\">Mês: </label>\r\n         <select [(ngModel)]=\"mes\" class=\"form-control\" name=\"mes\">\r\n         <option value=\"\">Selecione...</option>\r\n         <option *ngFor=\"let mes of meses\" [value]=\"mes\">\r\n         {{mes}}\r\n         </option>\r\n         </select>\r\n      </div>\r\n   </div>\r\n   <br />\r\n   <div class=\"row\">\r\n      <div class=\"col-md-3\">\r\n         <button type=\"submit\" class=\"btn btn-primary\">\r\n         <i class=\"fa fa-search\"></i> Consultar\r\n         </button>\r\n         <button type=\"button\" routerLink=\"/servico-prestado/form\" class=\"btn btn-success ml-1\">\r\n         <i class=\"fa fa-plus\"></i> Novo\r\n         </button>\r\n      </div>\r\n   </div>\r\n   </form>\r\n   <br />\r\n   <div class=\"row\">\r\n      <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"mensagem\">\r\n         {{ mensagem }}\r\n      </div>\r\n   </div>\r\n   <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n         <table class=\"table\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Cliente</th>\r\n                  <th>Descrição</th>\r\n                  <th>Valor</th>\r\n                  <th>Data</th>\r\n               <tr>\r\n            </thead>\r\n            <tbody>\r\n               <tr *ngFor=\"let s of lista\">\r\n                  <td>{{s.cliente.nome}}</td>\r\n                  <td>{{s.descricao}}</td>\r\n                  <td>{{s.valor}}</td>\r\n                  <td>{{s.data}}</td>\r\n               </tr>\r\n            </tbody>\r\n         </table>\r\n      </div>\r\n   </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ServicoPrestadoService } from 'src/app/servico-prestado.service';\r\nimport { servicoPrestadoBusca } from './servicoPrestadoBusca';\r\n\r\n@Component({\r\n  selector: 'app-servico-prestado-lista',\r\n  templateUrl: './servico-prestado-lista.component.html',\r\n  styleUrls: ['./servico-prestado-lista.component.css']\r\n})\r\nexport class ServicoPrestadoListaComponent implements OnInit {\r\n  nome: string;\r\n  mes: number;\r\n  meses: number[];\r\n  lista: servicoPrestadoBusca[];\r\n  mensagem: string;\r\n\r\n  constructor(private service: ServicoPrestadoService) {\r\n    this.meses = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  consultar() {\r\n    this.service.buscar(this.nome, this.mes).subscribe(response => {\r\n      this.lista = response;\r\n      if (this.lista.length <= 0) {\r\n        this.mensagem = \"Nenhum registro encontrado\";\r\n      }else{\r\n        this.mensagem = null;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ClientesService } from 'src/app/clientes.service';\r\nimport { Cliente } from '../cliente';\r\n\r\n@Component({\r\n  selector: 'app-clientes-form',\r\n  templateUrl: './clientes-form.component.html',\r\n  styleUrls: ['./clientes-form.component.css']\r\n})\r\nexport class ClientesFormComponent implements OnInit {\r\n\r\n  cliente: Cliente;\r\n  success: boolean = false;\r\n  errors: String[];\r\n  id: number;\r\n\r\n  constructor(\r\n    private service: ClientesService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute) {\r\n    this.cliente = new Cliente();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params && params.id) {\r\n        this.service.getClienteById(params.id).subscribe(response => {\r\n          this.cliente = response,\r\n            this.id = params.id,\r\n            errorResponse => this.cliente = new Cliente();\r\n        });\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.id) {\r\n      this.service\r\n      .atualizar(this.cliente)\r\n      .subscribe(response => {\r\n        this.success = true;\r\n        this.errors = null;\r\n      }, errorResponse => {\r\n        this.success = false;\r\n        this.errors = errorResponse;\r\n      }\r\n      );\r\n \r\n\r\n      \r\n    } else {\r\n      this.service\r\n        .salvar(this.cliente)\r\n        .subscribe(response => {\r\n          this.success = true;\r\n          this.errors = null;\r\n          this.cliente = response;\r\n        }, errorResponse => {\r\n          this.success = false;\r\n          this.errors = errorResponse.error.erros;\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n  voltarParaListagem() {\r\n    this.router.navigate(['/clientes/lista']);\r\n  }\r\n}\r\n\r\n","<h1 class=\"mt-4\">Clientes</h1>\r\n<ol class=\"breadcrumb mb-4\">\r\n   <li class=\"breadcrumb-item active\">{{cliente.id ? 'Edição' : 'Cadastro'}}</li>\r\n</ol>\r\n<div class=\"container\">\r\n   <form #clienteForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"row\">\r\n         <div class=\"col-md-12\">\r\n            <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"success == true\">\r\n               Cliente salvo/Atualizado com sucesso!\r\n            </div>\r\n            <div class=\"alert alert-danger\" role=\"alert\" *ngFor=\"let erro of errors\">\r\n               {{ erro }}\r\n            </div>\r\n         </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"cliente.id\">\r\n         <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n               <label>ID</label>\r\n               <input type=\"text\" class=\"form-control\" disabled=true [ngModel]=\"cliente.id\" name=\"id\">\r\n            </div>\r\n         </div>\r\n         <div class=\"col-md-6\" *ngIf=\"cliente.dataGravacao\">\r\n            <div class=\"form-group\">\r\n               <label>Data de Cadastro</label>\r\n               <input type=\"text\" class=\"form-control\" disabled=true [(ngModel)]=\"cliente.dataGravacao\"\r\n                  name=\"dataGravacao\">\r\n            </div>\r\n         </div>\r\n      </div>\r\n      <div class=\"row\">\r\n         <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n               <label>Nome:*</label>\r\n               <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.nome\" name=\"nome\">\r\n            </div>\r\n         </div>\r\n         <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n               <label>CPF:*</label>\r\n               <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.cpf\" name=\"cpf\">\r\n            </div>\r\n         </div>\r\n      </div>\r\n      <div class=\"row\">\r\n         <div class=\"col-md-3\">\r\n\r\n            <button type=\"submit\" class=\"btn btn-success\" *ngIf=\"!cliente.id\">\r\n               <i class=\"fa fa-save\"></i> Gravar\r\n            </button>\r\n\r\n            <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"cliente.id\">\r\n               <i class=\"fa fa-sync-alt\"></i> Atualizar\r\n            </button>\r\n\r\n            <button type=\"button\" class=\"btn btn-danger ml-1\" (click)=\"voltarParaListagem()\">\r\n               <i class=\"fa fa-arrow-alt-circle-left\"></i> Voltar\r\n            </button>\r\n         </div>\r\n      </div>\r\n   </form>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Cliente } from './clientes/cliente';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientesService {\r\n\r\n  apiUrl: string = environment.apiUrlBase + 'api/clientes';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  salvar(cliente: Cliente): Observable<Cliente> {\r\n    return this.http.post<Cliente>(`${this.apiUrl}`, cliente)\r\n  }\r\n\r\n  atualizar(cliente: Cliente): Observable<any> {\r\n    return this.http.put<Cliente>(`${this.apiUrl}/${cliente.id}`, cliente)\r\n  }\r\n\r\n  getClientes(): Observable<Cliente[]> {\r\n    return this.http.get<Cliente[]>(this.apiUrl);\r\n  }\r\n\r\n  getClienteById(id: number): Observable<Cliente> {\r\n    return this.http.get<any>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  deletar(cliente: Cliente): Observable<any> {\r\n    return this.http.delete<any>(`http://localhost:8080/api/clientes/${cliente.id}`);\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ServicoPrestadoRoutingModule } from './servico-prestado-routing.module';\r\nimport { ServicoPrestadoFormComponent } from './servico-prestado-form/servico-prestado-form.component';\r\nimport { ServicoPrestadoListaComponent } from './servico-prestado-lista/servico-prestado-lista.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ServicoPrestadoFormComponent,\r\n    ServicoPrestadoListaComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ServicoPrestadoRoutingModule,\r\n    FormsModule,\r\n    RouterModule\r\n  ],\r\n  exports:[\r\n    ServicoPrestadoFormComponent,\r\n    ServicoPrestadoListaComponent\r\n  ]\r\n})\r\nexport class ServicoPrestadoModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'clientes-app';\r\n}\r\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand\" href=\"#\">Meus Clientes</a>\r\n    <button class=\"btn btn-link btn-sm order-1 order-lg-0\" \r\n            id=\"sidebarToggle\" href=\"#\">\r\n        <i class=\"fas fa-bars\"></i>\r\n    </button>            \r\n</nav>","export class ServicoPrestado {\r\n    descricao: string;\r\n    preco: string;\r\n    data: string;\r\n    idCliente: number;\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { TemplateModule } from './template/template.module';\r\nimport { HomeComponent } from './home/home.component'\r\nimport { ClientesModule } from './clientes/clientes.module';\r\nimport { ClientesService } from './clientes.service';\r\nimport { HttpClientModule } from '@Angular/common/http'\r\nimport { ServicoPrestadoModule } from './servico-prestado/servico-prestado.module';\r\nimport { ServicoPrestadoService } from './servico-prestado.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { FormsModule } from '@angular/forms';\nimport { LayoutComponent } from './layout/layout.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    LayoutComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    TemplateModule,\r\n    ClientesModule,\r\n    ServicoPrestadoModule\r\n  ],\r\n  providers: [\r\n    ClientesService,\r\n    ServicoPrestadoService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LayoutComponent } from '../layout/layout.component';\r\nimport { ServicoPrestadoFormComponent } from './servico-prestado-form/servico-prestado-form.component';\r\nimport { ServicoPrestadoListaComponent } from './servico-prestado-lista/servico-prestado-lista.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'servico-prestado', component: LayoutComponent, children: [\r\n      { path: 'form', component: ServicoPrestadoFormComponent },\r\n      { path: 'lista', component: ServicoPrestadoListaComponent },\r\n      { path: '', redirectTo:'/servico-prestado/lista', pathMatch:'full' }\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ServicoPrestadoRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NavbarComponent,\r\n    SidebarComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  exports: [\r\n    NavbarComponent,\r\n    SidebarComponent\r\n  ]\r\n})\r\nexport class TemplateModule { }\r\n","import { Component, AfterViewInit } from '@angular/core';\r\nimport jQuery from 'jQuery';\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css']\r\n})\r\nexport class LayoutComponent implements AfterViewInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    (function ($) {\r\n      \"use strict\";\r\n\r\n      // Add active state to sidbar nav links\r\n      var path = window.location.href; // because the 'href' property of the DOM element is the absolute path\r\n      $(\"#layoutSidenav_nav .sb-sidenav a.nav-link\").each(function () {\r\n        if (this.href === path) {\r\n          $(this).addClass(\"active\");\r\n        }\r\n      });\r\n\r\n      // Toggle the side navigation\r\n      $(\"#sidebarToggle\").on(\"click\", function (e) {\r\n        e.preventDefault();\r\n        $(\"body\").toggleClass(\"sb-sidenav-toggled\");\r\n      });\r\n    })(jQuery);\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div id=\"layoutSidenav\">\r\n  <app-sidebar></app-sidebar> \r\n  <div id=\"layoutSidenav_content\">\r\n    <main>\r\n      <div class=\"container-fluid\">\r\n          <router-outlet></router-outlet>\r\n      </div>\r\n      <footer class=\"py-4 bg-light mt-auto\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"d-flex align-items-center justify-content-between small\">\r\n                <div class=\"text-muted\">Copyright &copy; Meus Clientes 2020</div>\r\n                <div>\r\n                    <a href=\"#\">Privacy Policy</a>\r\n                    &middot;\r\n                    <a href=\"#\">Terms &amp; Conditions</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </footer>\r\n    </main>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'login', component: LoginComponent},\r\n  {path: '', component: LayoutComponent, children:[\r\n    {path: 'home', component: HomeComponent},\r\n    \r\n  ]}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<div id=\"layoutAuthentication\">\r\n    <div id=\"layoutAuthentication_content\">\r\n        <main>\r\n            <div class=\"container\">\r\n                <div class=\"row justify-content-center\">\r\n                    <div class=\"col-lg-5\">\r\n                        <div class=\"card shadow-lg border-0 rounded-lg mt-5\">\r\n                            <div class=\"card-header\">\r\n                                <h3 class=\"text-center font-weight-light my-4\"> {{cadastrando ? 'Cadastrando novo\r\n                                    usuário' : 'Entrar'}}</h3>\r\n                            </div>\r\n                            <div class=\"card-body\">\r\n                                <div class=\"alert alert-danger\" *ngIf=\"loginError\">\r\n                                    Login e/ou senha incorretos\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card-body\">\r\n                                <form #LoginForm=\"ngForm\" (submit)=\"onSubmit();\">\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"small mb-1\">Login</label>\r\n                                        <input type=\"text\" name=\"username\" [(ngModel)]=\"username\"\r\n                                            class=\"form-control py-4\" placeholder=\"Digite seu login\">\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"small mb-1\">Senha</label>\r\n                                        <input type=\"password\" name=\"password\" [(ngModel)]=\"password\"\r\n                                            class=\"form-control py-4\" placeholder=\"Digite sua senha\">\r\n                                    </div>\r\n                                    <div class=\"form-group d-flex aling-items-center justify-content-between mt-4 mb-0\">\r\n                                        <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"!cadastrando\">\r\n                                            Enviar\r\n                                        </button>\r\n\r\n                                        <button type=\"submit\" class=\"btn btn-success\" *ngIf=\"cadastrando\">\r\n                                            Cadastrar\r\n                                        </button>\r\n                                        <button type=\"button\" class=\"btn btn-danger\" *ngIf=\"cadastrando\" (click)=\"cancelarCadastro()\">\r\n                                            Cancelar\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div class=\"card-footer text-center py-3\" *ngIf=\"!cadastrando\">\r\n                                <div class=\"small\"><a href=\"#\" (click)=\"preparaCadastro($event)\">Não possui usuário?\r\n                                        Cadastre-se!</a></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n\r\n  username: string;\r\n  password: string;\r\n  loginError: boolean;\r\n  cadastrando: boolean;\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  onSubmit() {\r\n    this.router.navigate(['/home'])\r\n  }\r\n\r\n  preparaCadastro(event) {\r\n    event.preventDefault();\r\n    this.cadastrando = true;\r\n  }\r\n\r\n  cancelarCadastro() {\r\n    this.cadastrando = false;\r\n  }\r\n\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}