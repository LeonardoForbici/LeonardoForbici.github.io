{"version":3,"sources":["webpack:///src/app/template/sidebar/sidebar.component.ts","webpack:///src/app/template/sidebar/sidebar.component.html","webpack:///src/app/servico-prestado.service.ts","webpack:///src/app/clientes/clientes.module.ts","webpack:///src/app/servico-prestado/servico-prestado-form/servico-prestado-form.component.ts","webpack:///src/app/servico-prestado/servico-prestado-form/servico-prestado-form.component.html","webpack:///src/app/login/usuario.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/clientes/clientes-routing.module.ts","webpack:///src/environments/environment.ts","webpack:///src/app/clientes/cliente.ts","webpack:///src/app/token.interceptor.ts","webpack:///src/app/clientes/clientes-lista/clientes-lista.component.html","webpack:///src/app/clientes/clientes-lista/clientes-lista.component.ts","webpack:///src/app/servico-prestado/servico-prestado-lista/servico-prestado-lista.component.html","webpack:///src/app/servico-prestado/servico-prestado-lista/servico-prestado-lista.component.ts","webpack:///src/app/clientes/clientes-form/clientes-form.component.ts","webpack:///src/app/clientes/clientes-form/clientes-form.component.html","webpack:///src/app/clientes.service.ts","webpack:///src/app/servico-prestado/servico-prestado.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/template/navbar/navbar.component.ts","webpack:///src/app/template/navbar/navbar.component.html","webpack:///src/app/servico-prestado/servico-prestado.ts","webpack:///src/app/app.module.ts","webpack:///src/app/servico-prestado/servico-prestado-routing.module.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/template/template.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/layout/layout.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["SidebarComponent","authService","router","usuarioLogado","getUsuarioAutenticado","encerrarSessao","navigate","logout","ServicoPrestadoService","http","apiUrl","apiUrlBase","servicoPrestado","post","nome","mes","httpParams","set","toString","url","console","log","get","ClientesModule","ServicoPrestadoFormComponent","clienteService","service","clientes","success","servico","getClientes","subscribe","response","salvar","errors","errorResponse","error","erros","onSubmit","Usuario","HomeComponent","routes","path","component","canActivate","children","redirectTo","pathMatch","ClientesRoutingModule","forChild","environment","production","clientId","clientSecret","obterTokenUrl","Cliente","TokenInterceptor","request","next","tokenString","localStorage","getItem","endsWith","token","JSON","parse","jwt","access_token","clone","setHeaders","Authorization","handle","ClientesListaComponent","resposta","cliente","clienteSelecionado","deletar","mensagemSucesso","ngOnInit","erro","mensagemErro","novoCadastro","deletarCliente","ServicoPrestadoListaComponent","meses","buscar","lista","length","mensagem","consultar","ClientesFormComponent","activatedRoute","params","id","getClienteById","atualizar","voltarParaListagem","ClientesService","put","ServicoPrestadoModule","AppComponent","title","NavbarComponent","ServicoPrestado","AppModule","provide","useClass","multi","ServicoPrestadoRoutingModule","AuthService","tokenURL","jwtHelper","removeItem","obterToken","usuario","decodeToken","user_name","username","password","headers","btoa","expired","isTokenExpired","TemplateModule","AuthGuard","route","state","authenticated","isAuthenticated","LayoutComponent","$","window","location","href","each","addClass","on","e","preventDefault","toggleClass","AppRoutingModule","forRoot","LoginComponent","tentarLogar","stringify","setItem","event","cadastrando","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  usuarioLogado: string;\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.usuarioLogado = this.authService.getUsuarioAutenticado();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.encerrarSessao();\r\n    this.router.navigate(['/login'])\r\n  }\r\n\r\n}\r\n","<div id=\"layoutSidenav_nav\">\r\n    <nav class=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\r\n       <div class=\"sb-sidenav-menu\">\r\n          <div class=\"nav\">\r\n             <div class=\"sb-sidenav-menu-heading\">Sistema</div>\r\n             <a class=\"nav-link\" routerLink=\"/home\">\r\n                <div class=\"sb-nav-link-icon\"><i class=\"fas fa-tachometer-alt\"></i></div>\r\n                Home\r\n             </a>\r\n             <div class=\"sb-sidenav-menu-heading\">Cadastro</div>\r\n             <a class=\"nav-link collapsed\" routerLink=\"/clientes\" data-toggle=\"collapse\"\r\n                data-target=\"#collapseLayouts\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                <div class=\"sb-nav-link-icon\"><i class=\"fas fa-columns\"></i></div>\r\n                Clientes\r\n             </a>\r\n             <a class=\"nav-link collapsed\" routerLink=\"/servico-prestado\" data-toggle=\"collapse\"\r\n             data-target=\"#collapseLayouts\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n             <div class=\"sb-nav-link-icon\"><i class=\"fas fa-address-card\"></i></div>\r\n             Serviços prestados\r\n          </a>\r\n\r\n          <div class=\"sb-sidenav-menu-heading\">Logout</div>\r\n             <a class=\"nav-link collapsed\" (click)=\"logout();\" href=\"#\" data-toggle=\"collapse\"\r\n                data-target=\"#collapseLayouts\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                <div class=\"sb-nav-link-icon\"><i class=\"fas fa-sign-out-alt\"></i></div>\r\n                Sair\r\n             </a>\r\n          </div>\r\n       </div>\r\n       <div class=\"sb-sidenav-footer\">\r\n          <div class=\"small\">Usuario logado:</div>\r\n          {{usuarioLogado}}\r\n       </div>\r\n    </nav>\r\n </div>","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ServicoPrestado } from './servico-prestado/servico-prestado';\r\nimport { servicoPrestadoBusca } from './servico-prestado/servico-prestado-lista/servicoPrestadoBusca';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServicoPrestadoService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  apiUrl: string = environment.apiUrlBase + '/api/servicos-prestados';\r\n\r\n  salvar(servicoPrestado: ServicoPrestado) : Observable<ServicoPrestado>{\r\n    return this.http.post<ServicoPrestado>(this.apiUrl, servicoPrestado);\r\n  }\r\n\r\n  buscar(nome:string,mes:number):Observable<servicoPrestadoBusca[]>{\r\n\r\n    const httpParams = new HttpParams().set(\"nome\",nome).set(\"mes\",mes ? mes.toString(): '');\r\n    const url = this.apiUrl + \"?\" + httpParams.toString();\r\n    console.log(url);\r\n    return this.http.get<any>(url);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ClientesRoutingModule } from './clientes-routing.module';\r\nimport { ClientesFormComponent } from './clientes-form/clientes-form.component';\r\nimport { FormsModule }   from '@angular/forms';\r\nimport { ClientesListaComponent } from './clientes-lista/clientes-lista.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ClientesFormComponent,\r\n    ClientesListaComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ClientesRoutingModule,\r\n    FormsModule\r\n  ],\r\n  exports:[\r\n    ClientesFormComponent,\r\n    ClientesListaComponent\r\n  ]\r\n})\r\nexport class ClientesModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ClientesService } from 'src/app/clientes.service';\r\nimport { Cliente } from 'src/app/clientes/cliente';\r\nimport { ServicoPrestadoService } from 'src/app/servico-prestado.service';\r\nimport { ServicoPrestado } from '../servico-prestado';\r\n\r\n@Component({\r\n  selector: 'app-servico-prestado-form',\r\n  templateUrl: './servico-prestado-form.component.html',\r\n  styleUrls: ['./servico-prestado-form.component.css']\r\n})\r\nexport class ServicoPrestadoFormComponent implements OnInit {\r\n\r\n  clientes: Cliente[] = [];\r\n  servico: ServicoPrestado;\r\n  success: boolean = false;\r\n  errors: String[];\r\n\r\n  constructor(private clienteService: ClientesService, private service: ServicoPrestadoService) {\r\n    this.servico = new ServicoPrestado();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.clienteService.getClientes().subscribe(response => this.clientes = response);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.service.salvar(this.servico).subscribe(response => {\r\n      this.success = true;\r\n          this.errors = null;\r\n          this.servico = new ServicoPrestado();\r\n        }, errorResponse => {\r\n          this.success = false;\r\n          this.errors = errorResponse.error.erros;\r\n    })\r\n  }\r\n\r\n}\r\n","<h1 class=\"mt-4\">Serviços Prestados</h1>\r\n<ol class=\"breadcrumb mb-4\">\r\n    <li class=\"breadcrumb-bitem active\">Novo</li>\r\n</ol>\r\n<div class=\"container\">\r\n    <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"success == true\">\r\n                    Serviço Prestado salvo/Atualizado com sucesso!\r\n                </div>\r\n                <div class=\"alert alert-danger\" role=\"alert\" *ngFor=\"let erro of errors\">\r\n                    {{ erro }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <label>Clientes:</label>\r\n                    <select class=\"form-control\" [ngModelOptions]=\"{standalone:true}\" [(ngModel)]=\"servico.idCliente\">\r\n                        <option value=\"\">Selecione</option>\r\n                        <option *ngFor=\"let cliente of clientes\" [ngValue]=\"cliente.id\">\r\n                            {{cliente.nome}}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <label>Descrição:</label>\r\n                    <input class=\"form-control\" [(ngModel)]=\"servico.descricao\" type=\"text\" name=\"descricao\"\r\n                        id=\"inputDescricao\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <label>Preço:</label>\r\n                    <input class=\"form-control\" [(ngModel)]=\"servico.preco\" type=\"text\" name=\"preco\" id=\"inputPreco\">\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <label>Data:</label>\r\n                    <input class=\"form-control\" [(ngModel)]=\"servico.data\" type=\"text\" name=\"data\" id=\"inputData\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n\r\n                <button type=\"submit\" class=\"btn btn-success\">\r\n                    <i class=\"fa fa-save\"></i> Salvar\r\n                </button>\r\n\r\n                <button type=\"button\" class=\"btn btn-danger ml-1\" routerLink=\"/servico-prestado/lista\">\r\n                    <i class=\"fa fa-arrow-alt-circle-left\"></i> Voltar\r\n                 </button>\r\n\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n<br />","export class Usuario{\r\n    username:string;\r\n    password:string;\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1 class=\"mt-4\">Home</h1>\r\n<ol class=\"breadcrumb mb-4\">\r\n    <li class=\"breadcrumb-item active\">Bem vindo</li>\r\n</ol>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '../auth.guard';\r\nimport { LayoutComponent } from '../layout/layout.component';\r\nimport { ClientesFormComponent } from './clientes-form/clientes-form.component';\r\nimport { ClientesListaComponent } from './clientes-lista/clientes-lista.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'clientes', component: LayoutComponent, canActivate: [AuthGuard], children: [\r\n      { path: 'form', component: ClientesFormComponent },\r\n      { path: 'form/:id', component: ClientesFormComponent },\r\n      { path: 'lista', component: ClientesListaComponent },\r\n      { path: '', redirectTo: '/clientes/lista', pathMatch: 'full' }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ClientesRoutingModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrlBase: 'http://localhost:8080',\r\n  clientId: 'my-angular-app',\r\n  clientSecret:'@321',\r\n  obterTokenUrl:'/oauth/token'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export class Cliente{\r\n id:number;\r\n nome:string;\r\n cpf:string;\r\n dataGravacao:string;\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    const tokenString = localStorage.getItem('access_token');\r\n\r\n    const url = request.url;\r\n\r\n    if (tokenString && !url.endsWith('/oauth/token')) {\r\n      console.log('CAIU')\r\n      const token = JSON.parse(tokenString);\r\n      const jwt = token.access_token;\r\n      request = request.clone({setHeaders:{\r\n        Authorization: 'Bearer ' + jwt\r\n      }});\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","<h1 class=\"mt-4\">Clientes</h1>\r\n<ol class=\"breadcrumb mb-4\">\r\n    <li class=\"breadcrumb-item active\">Consulta</li>\r\n</ol>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"mensagemSucesso\">\r\n                {{mensagemSucesso}}\r\n            </div>\r\n            <div class=\"alert alert-danger\" role=\"alert\" *ngFor=\"let mensagemErro of mensagemErro\">\r\n                {{ mensagemErro }}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2\">\r\n            <button class=\"btn btn-warning\" (click)=\"novoCadastro()\">\r\n                <i class=\"fa fa-plus\"></i>Novo\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <table class=\"table table-condensed table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <td>ID</td>\r\n                        <td>CPF</td>\r\n                        <td>Nome</td>\r\n                        <td>Data de cadastro</td>\r\n                        <td></td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let cliente of clientes\">\r\n                        <td>{{ cliente.id }}</td>\r\n                        <td>{{ cliente.cpf }}</td>\r\n                        <td>{{ cliente.nome }}</td>\r\n                        <td>{{ cliente.dataGravacao }}</td>\r\n                        <td>\r\n\r\n                            <button class=\"btn btn-primary\" routerLink=\"/clientes/form/{{cliente.id}}\">\r\n                                <i class=\"fa fa-pen-square\"></i>\r\n                            </button>\r\n\r\n                            <button type=\"button\" class=\"btn btn-danger\" data-toggle=\"modal\" data-target=\"#modalDelecao\"\r\n                                (click)=\"preparaDelecao(cliente)\">\r\n                                <i class=\"fa fa-trash\"></i>\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal\" id=\"modalDelecao\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h4 class=\"modal-title\">Confirmar</h4>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                </div>\r\n                <div class=\"modal-body\" *ngIf=\"clienteSelecionado\">\r\n                    Confirma a deleção do(a) cliente: {{clienteSelecionado.nome}} ?\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\"\r\n                        (click)=\"deletarCliente()\">Confirma</button>\r\n                    <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancelar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ClientesService } from 'src/app/clientes.service';\r\nimport { Cliente } from '../cliente';\r\n\r\n@Component({\r\n  selector: 'app-clientes-lista',\r\n  templateUrl: './clientes-lista.component.html',\r\n  styleUrls: ['./clientes-lista.component.css']\r\n})\r\nexport class ClientesListaComponent implements OnInit {\r\n\r\n  clientes: Cliente[] = [];\r\n  clienteSelecionado: Cliente;\r\n  mensagemErro: string;\r\n  mensagemSucesso: string;\r\n\r\n  constructor(private service: ClientesService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.service.getClientes().subscribe(resposta => this.clientes = resposta);\r\n  }\r\n\r\n  novoCadastro() {\r\n    this.router.navigate(['/clientes/form']);\r\n  }\r\n\r\n  preparaDelecao(cliente: Cliente) {\r\n    this.clienteSelecionado = cliente;\r\n  }\r\n\r\n  deletarCliente() {\r\n    console.log(this.clienteSelecionado)\r\n    this.service.deletar(this.clienteSelecionado).subscribe(\r\n      response => {\r\n        this.mensagemSucesso = 'Cliente deletado com sucesso',\r\n        this.ngOnInit();\r\n      },\r\n      erro => this.mensagemErro = 'Ocorreu um erro ao deletar o cliente');\r\n  }\r\n\r\n}\r\n","<h1 class=\"mt-4\">Serviços Prestados</h1>\r\n<ol class=\"breadcrumb mb-4\">\r\n   <li class=\"breadcrumb-bitem active\">Consulta</li>\r\n</ol>\r\n<div class=\"container\">\r\n   <form #ConsultarForm=\"ngForm\" (submit)=\"consultar()\">\r\n   <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n         <label for=\"inputName\">Nome cliente: </label>\r\n         <input type=\"text\" name=\"nome\" id=\"inputNome\" [(ngModel)]=\"nome\" class=\"form-control\">\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n         <label for=\"inputName\">Mês: </label>\r\n         <select [(ngModel)]=\"mes\" class=\"form-control\" name=\"mes\">\r\n         <option value=\"\">Selecione...</option>\r\n         <option *ngFor=\"let mes of meses\" [value]=\"mes\">\r\n         {{mes}}\r\n         </option>\r\n         </select>\r\n      </div>\r\n   </div>\r\n   <br />\r\n   <div class=\"row\">\r\n      <div class=\"col-md-3\">\r\n         <button type=\"submit\" class=\"btn btn-primary\">\r\n         <i class=\"fa fa-search\"></i> Consultar\r\n         </button>\r\n         <button type=\"button\" routerLink=\"/servico-prestado/form\" class=\"btn btn-success ml-1\">\r\n         <i class=\"fa fa-plus\"></i> Novo\r\n         </button>\r\n      </div>\r\n   </div>\r\n   </form>\r\n   <br />\r\n   <div class=\"row\">\r\n      <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"mensagem\">\r\n         {{ mensagem }}\r\n      </div>\r\n   </div>\r\n   <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n         <table class=\"table\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Cliente</th>\r\n                  <th>Descrição</th>\r\n                  <th>Valor</th>\r\n                  <th>Data</th>\r\n               <tr>\r\n            </thead>\r\n            <tbody>\r\n               <tr *ngFor=\"let s of lista\">\r\n                  <td>{{s.cliente.nome}}</td>\r\n                  <td>{{s.descricao}}</td>\r\n                  <td>{{s.valor}}</td>\r\n                  <td>{{s.data}}</td>\r\n               </tr>\r\n            </tbody>\r\n         </table>\r\n      </div>\r\n   </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ServicoPrestadoService } from 'src/app/servico-prestado.service';\r\nimport { servicoPrestadoBusca } from './servicoPrestadoBusca';\r\n\r\n@Component({\r\n  selector: 'app-servico-prestado-lista',\r\n  templateUrl: './servico-prestado-lista.component.html',\r\n  styleUrls: ['./servico-prestado-lista.component.css']\r\n})\r\nexport class ServicoPrestadoListaComponent implements OnInit {\r\n  nome: string;\r\n  mes: number;\r\n  meses: number[];\r\n  lista: servicoPrestadoBusca[];\r\n  mensagem: string;\r\n\r\n  constructor(private service: ServicoPrestadoService) {\r\n    this.meses = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  consultar() {\r\n    this.service.buscar(this.nome, this.mes).subscribe(response => {\r\n      this.lista = response;\r\n      if (this.lista.length <= 0) {\r\n        this.mensagem = \"Nenhum registro encontrado\";\r\n      }else{\r\n        this.mensagem = null;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ClientesService } from 'src/app/clientes.service';\r\nimport { Cliente } from '../cliente';\r\n\r\n@Component({\r\n  selector: 'app-clientes-form',\r\n  templateUrl: './clientes-form.component.html',\r\n  styleUrls: ['./clientes-form.component.css']\r\n})\r\nexport class ClientesFormComponent implements OnInit {\r\n\r\n  cliente: Cliente;\r\n  success: boolean = false;\r\n  errors: String[];\r\n  id: number;\r\n\r\n  constructor(\r\n    private service: ClientesService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute) {\r\n    this.cliente = new Cliente();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params && params.id) {\r\n        this.service.getClienteById(params.id).subscribe(response => {\r\n          this.cliente = response,\r\n            this.id = params.id,\r\n            errorResponse => this.cliente = new Cliente();\r\n        });\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.id) {\r\n      this.service\r\n      .atualizar(this.cliente)\r\n      .subscribe(response => {\r\n        this.success = true;\r\n        this.errors = null;\r\n      }, errorResponse => {\r\n        this.success = false;\r\n        this.errors = errorResponse;\r\n      }\r\n      );\r\n \r\n\r\n      \r\n    } else {\r\n      this.service\r\n        .salvar(this.cliente)\r\n        .subscribe(response => {\r\n          this.success = true;\r\n          this.errors = null;\r\n          this.cliente = response;\r\n        }, errorResponse => {\r\n          this.success = false;\r\n          this.errors = errorResponse.error.erros;\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n  voltarParaListagem() {\r\n    this.router.navigate(['/clientes/lista']);\r\n  }\r\n}\r\n\r\n","<h1 class=\"mt-4\">Clientes</h1>\r\n<ol class=\"breadcrumb mb-4\">\r\n   <li class=\"breadcrumb-item active\">{{cliente.id ? 'Edição' : 'Cadastro'}}</li>\r\n</ol>\r\n<div class=\"container\">\r\n   <form #clienteForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"row\">\r\n         <div class=\"col-md-12\">\r\n            <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"success == true\">\r\n               Cliente salvo/Atualizado com sucesso!\r\n            </div>\r\n            <div class=\"alert alert-danger\" role=\"alert\" *ngFor=\"let erro of errors\">\r\n               {{ erro }}\r\n            </div>\r\n         </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"cliente.id\">\r\n         <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n               <label>ID</label>\r\n               <input type=\"text\" class=\"form-control\" disabled=true [ngModel]=\"cliente.id\" name=\"id\">\r\n            </div>\r\n         </div>\r\n         <div class=\"col-md-6\" *ngIf=\"cliente.dataGravacao\">\r\n            <div class=\"form-group\">\r\n               <label>Data de Cadastro</label>\r\n               <input type=\"text\" class=\"form-control\" disabled=true [(ngModel)]=\"cliente.dataGravacao\"\r\n                  name=\"dataGravacao\">\r\n            </div>\r\n         </div>\r\n      </div>\r\n      <div class=\"row\">\r\n         <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n               <label>Nome:*</label>\r\n               <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.nome\" name=\"nome\">\r\n            </div>\r\n         </div>\r\n         <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n               <label>CPF:*</label>\r\n               <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.cpf\" name=\"cpf\">\r\n            </div>\r\n         </div>\r\n      </div>\r\n      <div class=\"row\">\r\n         <div class=\"col-md-3\">\r\n\r\n            <button type=\"submit\" class=\"btn btn-success\" *ngIf=\"!cliente.id\">\r\n               <i class=\"fa fa-save\"></i> Gravar\r\n            </button>\r\n\r\n            <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"cliente.id\">\r\n               <i class=\"fa fa-sync-alt\"></i> Atualizar\r\n            </button>\r\n\r\n            <button type=\"button\" class=\"btn btn-danger ml-1\" (click)=\"voltarParaListagem()\">\r\n               <i class=\"fa fa-arrow-alt-circle-left\"></i> Voltar\r\n            </button>\r\n         </div>\r\n      </div>\r\n   </form>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Cliente } from './clientes/cliente';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientesService {\r\n\r\n  apiUrl: string = environment.apiUrlBase + '/api/clientes';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  salvar(cliente: Cliente): Observable<Cliente> {\r\n    return this.http.post<Cliente>(`${this.apiUrl}`, cliente)\r\n  }\r\n\r\n  atualizar(cliente: Cliente): Observable<any> {\r\n    return this.http.put<Cliente>(`${this.apiUrl}/${cliente.id}`, cliente)\r\n  }\r\n\r\n  getClientes(): Observable<Cliente[]> {\r\n    return this.http.get<Cliente[]>(this.apiUrl);\r\n  }\r\n\r\n  getClienteById(id: number): Observable<Cliente> {\r\n    return this.http.get<any>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  deletar(cliente: Cliente): Observable<any> {\r\n    return this.http.delete<any>(`http://localhost:8080/api/clientes/${cliente.id}`);\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ServicoPrestadoRoutingModule } from './servico-prestado-routing.module';\r\nimport { ServicoPrestadoFormComponent } from './servico-prestado-form/servico-prestado-form.component';\r\nimport { ServicoPrestadoListaComponent } from './servico-prestado-lista/servico-prestado-lista.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ServicoPrestadoFormComponent,\r\n    ServicoPrestadoListaComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ServicoPrestadoRoutingModule,\r\n    FormsModule,\r\n    RouterModule\r\n  ],\r\n  exports:[\r\n    ServicoPrestadoFormComponent,\r\n    ServicoPrestadoListaComponent\r\n  ]\r\n})\r\nexport class ServicoPrestadoModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'clientes-app';\r\n}\r\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand\" href=\"#\">Meus Clientes</a>\r\n    <button class=\"btn btn-link btn-sm order-1 order-lg-0\" \r\n            id=\"sidebarToggle\" href=\"#\">\r\n        <i class=\"fas fa-bars\"></i>\r\n    </button>            \r\n</nav>","export class ServicoPrestado {\r\n    descricao: string;\r\n    preco: string;\r\n    data: string;\r\n    idCliente: number;\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { TemplateModule } from './template/template.module';\r\nimport { HomeComponent } from './home/home.component'\r\nimport { ClientesModule } from './clientes/clientes.module';\r\nimport { ClientesService } from './clientes.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@Angular/common/http'\r\nimport { ServicoPrestadoModule } from './servico-prestado/servico-prestado.module';\r\nimport { ServicoPrestadoService } from './servico-prestado.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { AuthService } from './auth.service';\r\nimport { TokenInterceptor } from './token.interceptor';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    LayoutComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    TemplateModule,\r\n    ClientesModule,\r\n    ServicoPrestadoModule\r\n  ],\r\n  providers: [\r\n    ClientesService,\r\n    ServicoPrestadoService,\r\n    AuthService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '../auth.guard';\r\nimport { LayoutComponent } from '../layout/layout.component';\r\nimport { ServicoPrestadoFormComponent } from './servico-prestado-form/servico-prestado-form.component';\r\nimport { ServicoPrestadoListaComponent } from './servico-prestado-lista/servico-prestado-lista.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'servico-prestado', component: LayoutComponent, canActivate: [AuthGuard], children: [\r\n      { path: 'form', component: ServicoPrestadoFormComponent },\r\n      { path: 'lista', component: ServicoPrestadoListaComponent },\r\n      { path: '', redirectTo: '/servico-prestado/lista', pathMatch: 'full' }\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ServicoPrestadoRoutingModule { }\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Usuario } from './login/usuario';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  apiUrl: string = environment.apiUrlBase + \"/api/usuarios\";\r\n  tokenURL: string = environment.apiUrlBase + environment.obterTokenUrl;\r\n  clientId: string = environment.clientId;\r\n  clientSecret: string = environment.clientSecret;\r\n  jwtHelper: JwtHelperService = new JwtHelperService();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  obterToken() {\r\n    const tokenString = localStorage.getItem('access_token');\r\n    if (tokenString) {\r\n      const token = JSON.parse(tokenString).access_token\r\n      return token;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  encerrarSessao(){\r\n    localStorage.removeItem('access_token');\r\n  }\r\n\r\n  getUsuarioAutenticado(){\r\n    const token = this.obterToken();\r\n    if(token){\r\n      const usuario = this.jwtHelper.decodeToken(token).user_name;\r\n      return usuario;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  salvar(usuario: Usuario): Observable<any> {\r\n    return this.http.post<any>(this.apiUrl, usuario)\r\n  }\r\n\r\n  tentarLogar(username: string, password: string): Observable<any> {\r\n    const params = new HttpParams().set('username', username)\r\n      .set('password', password)\r\n      .set('grant_type', 'password')\r\n    const headers = {\r\n      'Authorization': 'Basic ' + btoa(`${this.clientId}:${this.clientSecret}`),\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n    return this.http.post(this.tokenURL, params.toString(), { headers })\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    const token = this.obterToken();\r\n    if (token) {\r\n      const expired = this.jwtHelper.isTokenExpired(token);\r\n      return !expired;\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NavbarComponent,\r\n    SidebarComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  exports: [\r\n    NavbarComponent,\r\n    SidebarComponent\r\n  ]\r\n})\r\nexport class TemplateModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) {\r\n\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean {\r\n    const authenticated = this.authService.isAuthenticated();\r\n    if (authenticated) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login'])\r\n      return false;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { Component, AfterViewInit } from '@angular/core';\r\nimport jQuery from 'jQuery';\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css']\r\n})\r\nexport class LayoutComponent implements AfterViewInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    (function ($) {\r\n      \"use strict\";\r\n\r\n      // Add active state to sidbar nav links\r\n      var path = window.location.href; // because the 'href' property of the DOM element is the absolute path\r\n      $(\"#layoutSidenav_nav .sb-sidenav a.nav-link\").each(function () {\r\n        if (this.href === path) {\r\n          $(this).addClass(\"active\");\r\n        }\r\n      });\r\n\r\n      // Toggle the side navigation\r\n      $(\"#sidebarToggle\").on(\"click\", function (e) {\r\n        e.preventDefault();\r\n        $(\"body\").toggleClass(\"sb-sidenav-toggled\");\r\n      });\r\n    })(jQuery);\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div id=\"layoutSidenav\">\r\n  <app-sidebar></app-sidebar> \r\n  <div id=\"layoutSidenav_content\">\r\n    <main>\r\n      <div class=\"container-fluid\">\r\n          <router-outlet></router-outlet>\r\n      </div>\r\n      <footer class=\"py-4 bg-light mt-auto\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"d-flex align-items-center justify-content-between small\">\r\n                <div class=\"text-muted\">Copyright &copy; Meus Clientes 2020</div>\r\n                <div>\r\n                    <a href=\"#\">Privacy Policy</a>\r\n                    &middot;\r\n                    <a href=\"#\">Terms &amp; Conditions</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </footer>\r\n    </main>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  {\r\n    path: '', component: LayoutComponent, children: [\r\n      { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\r\n      { path: '', redirectTo: '/home', pathMatch: 'full' }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\nimport { Usuario } from './usuario';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n\r\n  username: string;\r\n  password: string;\r\n  cadastrando: boolean;\r\n  mensagemSucesso: string;\r\n  errors: String[];\r\n\r\n  constructor(private router: Router, private authService: AuthService) { }\r\n\r\n  onSubmit() {\r\n    this.authService.tentarLogar(this.username, this.password).subscribe(response => {\r\n      const access_token = JSON.stringify(response);\r\n      localStorage.setItem('access_token', access_token);\r\n      this.router.navigate(['/home'])\r\n    }, errorResponse => {\r\n      this.errors = ['Usuário e/ou senha incorreta!']\r\n    })\r\n\r\n\r\n  }\r\n\r\n  preparaCadastro(event) {\r\n    event.preventDefault();\r\n    this.cadastrando = true;\r\n  }\r\n\r\n  cancelarCadastro() {\r\n    this.cadastrando = false;\r\n  }\r\n\r\n  cadastrar() {\r\n    const usuario: Usuario = new Usuario();\r\n    usuario.username = this.username;\r\n    usuario.password = this.password;\r\n    this.authService.salvar(usuario).subscribe(response => {\r\n      this.mensagemSucesso = \"Cadastro realizado com sucesso! Efetue o login.\";\r\n      this.cadastrando = false;\r\n      this.username = \"\";\r\n      this.password = \"\";\r\n      this.errors = [];\r\n    }, errorResponse => {\r\n      this.mensagemSucesso = null;\r\n      this.errors = errorResponse.error.erros;\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"bg-primary\">\r\n    <div id=\"layoutAuthentication\">\r\n       <div id=\"layoutAuthentication_content\">\r\n          <main>\r\n             <div class=\"container\">\r\n                <div class=\"row justify-content-center\">\r\n                   <div class=\"col-lg-5\">\r\n                      <div class=\"card shadow-lg border-0 rounded-lg mt-5\">\r\n                         <div class=\"card-header\">\r\n                            <h3 class=\"text-center font-weight-light my-4\"> {{cadastrando ? 'Cadastrando novo\r\n                               usuário' : 'Entrar'}}\r\n                            </h3>\r\n                         </div>\r\n                         <div class=\"card-body\">\r\n                            <div class=\"alert alert-success\" *ngIf=\"mensagemSucesso\">\r\n                               {{mensagemSucesso}}\r\n                            </div>\r\n                            <div class=\"alert alert-danger\" *ngFor=\"let erro of errors\">\r\n                               {{erro}}\r\n                            </div>\r\n                         </div>\r\n                         <div class=\"card-body\">\r\n                            <form #LoginForm=\"ngForm\" (submit)=\"onSubmit();\">\r\n                            <div class=\"form-group\">\r\n                               <label class=\"small mb-1\">Login</label>\r\n                               <input type=\"text\" name=\"username\" [(ngModel)]=\"username\" autocomplete=\"off\"\r\n                               class=\"form-control py-4\" placeholder=\"Digite seu login\">\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                               <label class=\"small mb-1\">Senha</label>\r\n                               <input type=\"password\" name=\"password\" [(ngModel)]=\"password\"\r\n                               class=\"form-control py-4\" placeholder=\"Digite sua senha\">\r\n                            </div>\r\n                            <div class=\"form-group d-flex aling-items-center justify-content-between mt-4 mb-0\">\r\n                               <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"!cadastrando\">\r\n                               Enviar\r\n                               </button>\r\n                               <button type=\"button\" class=\"btn btn-success\" (click)=\"cadastrar()\" *ngIf=\"cadastrando\" >\r\n                               Cadastrar\r\n                               </button>\r\n                               <button type=\"button\" class=\"btn btn-danger\" *ngIf=\"cadastrando\" (click)=\"cancelarCadastro()\">\r\n                               Cancelar\r\n                               </button>\r\n                            </div>\r\n                            </form>\r\n                         </div>\r\n                         <div class=\"card-footer text-center py-3\" *ngIf=\"!cadastrando\">\r\n                            <div class=\"small\"><a href=\"#\" (click)=\"preparaCadastro($event)\">Não possui usuário?\r\n                               Cadastre-se!</a>\r\n                            </div>\r\n                         </div>\r\n                      </div>\r\n                   </div>\r\n                </div>\r\n             </div>\r\n          </main>\r\n       </div>\r\n    </div>\r\n </div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}